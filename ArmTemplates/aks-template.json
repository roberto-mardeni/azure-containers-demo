{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string"
        },
        "dnsPrefix": {
            "type": "string"
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "defaultValue": "kubenet",
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable private network access to the Kubernetes cluster."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true
        },
        "enableAzurePolicy": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off Azure Policy addon."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off omsagent addon."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "defaultValue": 3,
            "type": "int"
        },
        "agentVMSize": {
            "defaultValue": "Standard_DS2_v2",
            "type": "string"
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.22.11"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "registryName": {
            "type": "string"
        },
        "guidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
            },
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
        "omsWorkspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
        "clusterId": "[concat('Microsoft.ContainerService/managedClusters/',parameters('clusterName'))]",
        "acrPullRole" : "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ContainerInsights",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[split(variables('omsWorkspaceId'),'/')[4]]",
            "subscriptionId": "[split(variables('omsWorkspaceId'),'/')[2]]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[resourceGroup().location]",
                            "name": "[concat('ContainerInsights', '(', split(variables('omsWorkspaceId'),'/')[8], ')')]",
                            "properties": {
                                "workspaceResourceId": "[variables('omsWorkspaceId')]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', split(variables('omsWorkspaceId'),'/')[8], ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "apiVersion": "2021-07-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[resourceGroup().location]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": 3,
                        "enableAutoScaling": true,
                        "minCount": 1,
                        "maxCount": 3,
                        "vmSize": "Standard_B4ms",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": [],
                        "nodeTaints": [],
                        "enableNodePublicIP": false,
                        "tags": {}
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "azurepolicy": {
                        "enabled": "[parameters('enableAzurePolicy')]"
                    },
                    "azureKeyvaultSecretsProvider": {
                        "enabled": false
                    },
                    "omsAgent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[variables('omsWorkspaceId')]"
                        }
                    }
                }
            },
            "tags": {},
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterMonitoringMetricPulisherRoleAssignment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(parameters('clusterName'),'/Microsoft.Authorization/80ba5997-e588-4d9d-b0da-d3ca3ed6b8a4')]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                                "principalId": "[reference(parameters('clusterName')).addonProfiles.omsAgent.identity.objectId]",
                                "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/',parameters('clusterName'))]"
            ]
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(parameters('registryName'), '/Microsoft.Authorization/', guid(parameters('registryName')))]",
            "properties": {
                "roleDefinitionId": "[variables('AcrPullRole')]",
                "principalId": "[reference(concat('Microsoft.ContainerService/managedClusters/',parameters('clusterName')), '2021-07-01', 'Full').identity.principalId]"
            },
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/',parameters('clusterName'))]"
            ]
        }
    ],
    "outputs": {
        "applicationRoutingZone": {
            "value": "[if(parameters('enableHttpApplicationRouting'), reference(variables('clusterId')).addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName, '')]",
            "type": "string"
        }
    }
}